SET XACT_ABORT ON

BEGIN TRY
    BEGIN TRANSACTION

        ;
        INSERT INTO SIC.dbo.CONFIRMAFACILOCORRENCIA
          ( CONFIRMAFACIL_ID, OCORRENCIA_ID, OCORRENCIA_NOME, OCORRENCIA_DATA )
        SELECT
          CF.ID                             AS CONFIRMAFACIL_ID,
          000                               AS OCORRENCIA_ID,
          'PROCESSO DE TRANSPORTE INICIADO' AS OCORRENCIA_NOME,
          CNH.DATA                          AS OCORRENCIA_DATA
        FROM SIC.dbo.CONFIRMAFACIL CF
          JOIN CARGASSQL.dbo.CNH ON CNH.EMP_CODIGO=SUBSTRING(CF.CTRC,1,3) AND CNH.SERIE = SUBSTRING(CF.CTRC,4,1) AND CNH.CTRC = SUBSTRING(CF.CTRC,5,10)
        WHERE FASE_ID = 0
          AND NOT EXISTS ( SELECT 1 FROM SIC.dbo.CONFIRMAFACILOCORRENCIA CO WHERE CO.CONFIRMAFACIL_ID = CF.ID AND CO.OCORRENCIA_ID = 0 )         
          AND CNH.VALORNF>0
        -- CASO A (FASE = 0) E  NÃƒO EXISTIR OCORRENCIA = 0 GERADA, INCLUI OCORRENCIA
        ;
        UPDATE CF 
          SET FASE_ID = 1,
              DT_UPDATE = CURRENT_TIMESTAMP
        FROM  SIC.dbo.CONFIRMAFACIL CF
        WHERE FASE_ID = 0
          AND EXISTS ( SELECT 1 FROM SIC.dbo.CONFIRMAFACILOCORRENCIA CO WHERE CO.CONFIRMAFACIL_ID = CF.ID AND CO.OCORRENCIA_ID = 0 ) 
        -- CASO A (FASE = 0) E EXISTIR OCORRENCIA = 0 GERADA, MUDA PARA FASE = 1
        ;

    COMMIT TRANSACTION

END TRY
BEGIN CATCH
    IF @@TRANCOUNT > 0
        ROLLBACK TRANSACTION

    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE()
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY()
    DECLARE @ErrorState INT = ERROR_STATE()

    RAISERROR (@ErrorMessage, @ErrorSeverity, @ErrorState);
END CATCH
;